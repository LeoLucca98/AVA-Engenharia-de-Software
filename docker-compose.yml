name: ava
services:
  # Databases
  auth_db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: auth_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d auth_service"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [ava_net]

  learning_db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: learning_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - learning_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d learning_service"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [ava_net]

  recommendation_db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: recommendation_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5435:5432"
    volumes:
      - recommendation_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d recommendation_service"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [ava_net]

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    env_file:
      - ./env.example
    depends_on:
      - auth_service
      - learning_service
      - recommendation_service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz"]
      interval: 10s
      timeout: 3s
      retries: 10
    networks: [ava_net]

  auth_service:
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
      - DB_HOST=auth_db
      - DB_NAME=auth_service
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - ALLOWED_HOSTS=localhost,127.0.0.1,auth_service,0.0.0.0
    ports:
      - "8001:8000"
    depends_on:
      auth_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz/"]
      interval: 10s
      timeout: 3s
      retries: 10
    networks: [ava_net]

  learning_service:
    build:
      context: ./learning_service
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
      - DB_HOST=learning_db
      - DB_NAME=learning_service
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
    depends_on:
      learning_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz/"]
      interval: 10s
      timeout: 3s
      retries: 10
    networks: [ava_net]

  recommendation_service:
    build:
      context: ./recommendation_service
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    depends_on:
      recommendation_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 3s
      retries: 10
    networks: [ava_net]

  ava-frontend:
    build:
      context: ./ava-frontend
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - api-gateway
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz"]
      interval: 10s
      timeout: 3s
      retries: 10
    networks: [ava_net]

networks:
  ava_net:
    driver: bridge

volumes:
  auth_db_data:
  learning_db_data:
  recommendation_db_data: